"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("_app-pages-browser_components_DragAndDropGrid_js",{

/***/ "(app-pages-browser)/./components/DragAndDropGrid.js":
/*!***************************************!*\
  !*** ./components/DragAndDropGrid.js ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ DragAndDropGrid; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _hello_pangea_dnd__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @hello-pangea/dnd */ \"(app-pages-browser)/./node_modules/@hello-pangea/dnd/dist/dnd.esm.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! uuid */ \"(app-pages-browser)/./node_modules/uuid/dist/esm-browser/v4.js\");\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var next_image__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/image */ \"(app-pages-browser)/./node_modules/next/dist/api/image.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\nconst supabaseUrl = \"https://pqoamjlwwaiiazroyeev.supabase.co\";\nconst supabaseKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBxb2Ftamx3d2FpaWF6cm95ZWV2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mjk2NTI5MjIsImV4cCI6MjA0NTIyODkyMn0.vnrGd6sJUOOP-UNYe_j4aZJciNUWPZWg42mS5v0nTQo\";\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_3__.createClient)(supabaseUrl, supabaseKey);\n// Updated icons list with assigned values\nconst initialIcons = [\n    {\n        id: (0,uuid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(),\n        content: \"/icons/CNOT.svg\",\n        type: \"CNOT\",\n        value: 1\n    },\n    {\n        id: (0,uuid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(),\n        content: \"/icons/H_Gate.svg\",\n        type: \"H_Gate\",\n        value: 2\n    },\n    {\n        id: (0,uuid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(),\n        content: \"/icons/X_Gate.svg\",\n        type: \"X_Gate\",\n        value: 2\n    },\n    {\n        id: (0,uuid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(),\n        content: \"/icons/Y_Gate.svg\",\n        type: \"Y_Gate\",\n        value: 3\n    },\n    {\n        id: (0,uuid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(),\n        content: \"/icons/Z_Gate.svg\",\n        type: \"Z_Gate\",\n        value: 4\n    }\n];\nconst GRID_ROWS = 2;\nconst GRID_COLUMNS = 10;\nfunction DragAndDropGrid() {\n    _s();\n    const [icons, setIcons] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialIcons);\n    const [grid, setGrid] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(Array(GRID_ROWS).fill(null).map(()=>Array(GRID_COLUMNS).fill(null).map(()=>({\n                gate: null,\n                occupiedBy: null\n            }))));\n    const getRowValues = (rowIndex)=>{\n        const row = grid[rowIndex];\n        return row.map((cell)=>{\n            if (cell.gate && cell.gate.value !== null) {\n                return cell.gate.value;\n            }\n            return 0;\n        });\n    };\n    const isCNOTConflict = function(destRow, destCol, gateType) {\n        let currentGateId = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;\n        // Check if any cell in the column is occupied by a CNOT gate\n        // (except for the current gate if we're moving an existing CNOT)\n        for(let row = 0; row < GRID_ROWS; row++){\n            const cell = grid[row][destCol];\n            if (cell.occupiedBy && cell.occupiedBy !== currentGateId) {\n                const occupyingGate = grid[0][destCol].gate || grid[1][destCol].gate;\n                if (occupyingGate && occupyingGate.type.startsWith(\"CNOT\")) {\n                    return true;\n                }\n            }\n        }\n        // If placing a CNOT gate, check if any cell in the column is occupied\n        if (gateType.startsWith(\"CNOT\")) {\n            for(let row = 0; row < GRID_ROWS; row++){\n                const cell = grid[row][destCol];\n                if (cell.gate && (!currentGateId || cell.occupiedBy !== currentGateId)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    const onDragEnd = async (result)=>{\n        const { source, destination, draggableId } = result;\n        if (!destination) return;\n        if (source.droppableId === destination.droppableId && source.index === destination.index) {\n            return;\n        }\n        // Handle removing from grid\n        if (source.droppableId.startsWith(\"cell-\") && destination.droppableId === \"icons\") {\n            const [sourceRow, sourceCol] = source.droppableId.split(\"-\").slice(1).map(Number);\n            const cellData = grid[sourceRow][sourceCol];\n            let newGrid = [\n                ...grid\n            ];\n            if (cellData.gate.type.startsWith(\"CNOT\")) {\n                newGrid = newGrid.map((row, rowIndex)=>{\n                    const newRow = [\n                        ...row\n                    ];\n                    if (newRow[sourceCol].occupiedBy === cellData.gate.id) {\n                        newRow[sourceCol] = {\n                            gate: null,\n                            occupiedBy: null\n                        };\n                    }\n                    return newRow;\n                });\n            } else {\n                newGrid[sourceRow][sourceCol] = {\n                    gate: null,\n                    occupiedBy: null\n                };\n            }\n            setGrid(newGrid);\n            try {\n                await supabase.from(\"icon_positions\").delete().eq(\"id\", draggableId);\n            } catch (error) {\n                console.error(\"Error deleting data:\", error);\n            }\n            return;\n        }\n        // Handle moving within grid\n        if (source.droppableId.startsWith(\"cell-\") && destination.droppableId.startsWith(\"cell-\")) {\n            const [sourceRow, sourceCol] = source.droppableId.split(\"-\").slice(1).map(Number);\n            const [destRow, destCol] = destination.droppableId.split(\"-\").slice(1).map(Number);\n            const cellData = grid[sourceRow][sourceCol];\n            // Check for CNOT conflicts\n            if (isCNOTConflict(destRow, destCol, cellData.gate.type, cellData.gate.id)) {\n                alert(\"Cannot move gate here due to CNOT gate conflict.\");\n                return;\n            }\n            if (cellData.gate.type.startsWith(\"CNOT\")) {\n                let newGrid = grid.map((row, rowIndex)=>{\n                    const newRow = [\n                        ...row\n                    ];\n                    if (newRow[sourceCol].occupiedBy === cellData.gate.id) {\n                        newRow[sourceCol] = {\n                            gate: null,\n                            occupiedBy: null\n                        };\n                    }\n                    return newRow;\n                });\n                newGrid = newGrid.map((row, rowIndex)=>{\n                    const newRow = [\n                        ...row\n                    ];\n                    newRow[destCol] = {\n                        gate: rowIndex === 0 ? cellData.gate : null,\n                        occupiedBy: cellData.gate.id\n                    };\n                    return newRow;\n                });\n                setGrid(newGrid);\n            } else {\n                // For regular gates, only check the specific cell\n                if (grid[destRow][destCol].gate) {\n                    alert(\"Destination cell is occupied.\");\n                    return;\n                }\n                const newGrid = [\n                    ...grid\n                ];\n                newGrid[sourceRow][sourceCol] = {\n                    gate: null,\n                    occupiedBy: null\n                };\n                newGrid[destRow][destCol] = {\n                    gate: cellData.gate,\n                    occupiedBy: cellData.gate.id\n                };\n                setGrid(newGrid);\n            }\n            try {\n                await supabase.from(\"icon_positions\").update({\n                    position_x: destCol,\n                    position_y: destRow\n                }).eq(\"id\", draggableId);\n            } catch (error) {\n                console.error(\"Error updating data:\", error);\n            }\n            return;\n        }\n        // Handle adding new gate from icons to grid\n        if (source.droppableId === \"icons\" && destination.droppableId.startsWith(\"cell-\")) {\n            const originalIcon = icons.find((icon)=>icon.id === draggableId);\n            const newGate = {\n                ...originalIcon,\n                id: (0,uuid__WEBPACK_IMPORTED_MODULE_4__[\"default\"])()\n            };\n            const [destRow, destCol] = destination.droppableId.split(\"-\").slice(1).map(Number);\n            // Check for CNOT conflicts with new gate\n            if (isCNOTConflict(destRow, destCol, newGate.type)) {\n                alert(\"Cannot place gate here due to CNOT gate conflict.\");\n                return;\n            }\n            if (newGate.type.startsWith(\"CNOT\")) {\n                const newGrid = grid.map((row, rowIndex)=>{\n                    const newRow = [\n                        ...row\n                    ];\n                    newRow[destCol] = {\n                        gate: rowIndex === 0 ? newGate : null,\n                        occupiedBy: newGate.id\n                    };\n                    return newRow;\n                });\n                setGrid(newGrid);\n            } else {\n                if (grid[destRow][destCol].gate) {\n                    alert(\"Cell is already occupied.\");\n                    return;\n                }\n                const newGrid = [\n                    ...grid\n                ];\n                newGrid[destRow][destCol] = {\n                    gate: newGate,\n                    occupiedBy: newGate.id\n                };\n                setGrid(newGrid);\n            }\n            try {\n                await supabase.from(\"icon_positions\").insert([\n                    {\n                        id: newGate.id,\n                        icon_type: newGate.type,\n                        position_x: destCol,\n                        position_y: destRow\n                    }\n                ]);\n            } catch (error) {\n                console.error(\"Error inserting data:\", error);\n            }\n            return;\n        }\n    };\n    // Rest of the component remains the same...\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        style: {\n            backgroundColor: \"#fff\",\n            minHeight: \"100vh\",\n            color: \"black\"\n        },\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_hello_pangea_dnd__WEBPACK_IMPORTED_MODULE_5__.DragDropContext, {\n            onDragEnd: onDragEnd,\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        padding: \"20px\"\n                    },\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            style: {\n                                color: \"black\"\n                            },\n                            children: \"Available Icons\"\n                        }, void 0, false, {\n                            fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                            lineNumber: 254,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_hello_pangea_dnd__WEBPACK_IMPORTED_MODULE_5__.Droppable, {\n                            droppableId: \"icons\",\n                            direction: \"horizontal\",\n                            isDropDisabled: false,\n                            children: (provided)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    ref: provided.innerRef,\n                                    ...provided.droppableProps,\n                                    style: {\n                                        display: \"flex\",\n                                        gap: \"10px\"\n                                    },\n                                    children: [\n                                        icons.map((icon, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_hello_pangea_dnd__WEBPACK_IMPORTED_MODULE_5__.Draggable, {\n                                                draggableId: icon.id,\n                                                index: index,\n                                                children: (provided)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                        ref: provided.innerRef,\n                                                        ...provided.draggableProps,\n                                                        ...provided.dragHandleProps,\n                                                        style: {\n                                                            cursor: \"pointer\",\n                                                            ...provided.draggableProps.style\n                                                        },\n                                                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                                            src: icon.content,\n                                                            width: 50,\n                                                            height: 50,\n                                                            alt: icon.type\n                                                        }, void 0, false, {\n                                                            fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                                                            lineNumber: 278,\n                                                            columnNumber: 25\n                                                        }, this)\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                                                        lineNumber: 269,\n                                                        columnNumber: 23\n                                                    }, this)\n                                            }, icon.id, false, {\n                                                fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                                                lineNumber: 267,\n                                                columnNumber: 19\n                                            }, this)),\n                                        provided.placeholder\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                                    lineNumber: 261,\n                                    columnNumber: 15\n                                }, this)\n                        }, void 0, false, {\n                            fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                            lineNumber: 255,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                    lineNumber: 253,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        padding: \"20px\"\n                    },\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            style: {\n                                color: \"black\"\n                            },\n                            children: \"Grid\"\n                        }, void 0, false, {\n                            fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                            lineNumber: 296,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            style: {\n                                display: \"grid\",\n                                gridTemplateRows: \"repeat(\".concat(GRID_ROWS, \", 60px)\"),\n                                gridTemplateColumns: \"repeat(\".concat(GRID_COLUMNS, \", 60px)\"),\n                                position: \"relative\"\n                            },\n                            children: Array.from({\n                                length: GRID_ROWS\n                            }).map((_, rowIndex)=>Array.from({\n                                    length: GRID_COLUMNS\n                                }).map((_, colIndex)=>{\n                                    const cellId = \"cell-\".concat(rowIndex, \"-\").concat(colIndex);\n                                    const cellData = grid[rowIndex][colIndex];\n                                    const isCNOT = cellData.gate && cellData.gate.type.startsWith(\"CNOT\") && rowIndex === 0;\n                                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_hello_pangea_dnd__WEBPACK_IMPORTED_MODULE_5__.Droppable, {\n                                        droppableId: cellId,\n                                        children: (provided)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                ref: provided.innerRef,\n                                                ...provided.droppableProps,\n                                                style: {\n                                                    width: \"60px\",\n                                                    height: \"60px\",\n                                                    borderBottom: rowIndex < GRID_ROWS - 1 ? \"1px solid black\" : \"none\",\n                                                    borderRight: colIndex < GRID_COLUMNS - 1 ? \"1px solid black\" : \"none\",\n                                                    display: \"flex\",\n                                                    alignItems: \"center\",\n                                                    justifyContent: \"center\",\n                                                    backgroundColor: \"#fff\",\n                                                    gridRowStart: rowIndex + 1,\n                                                    gridColumnStart: colIndex + 1,\n                                                    position: \"relative\",\n                                                    overflow: \"visible\"\n                                                },\n                                                children: [\n                                                    cellData.gate ? isCNOT ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_hello_pangea_dnd__WEBPACK_IMPORTED_MODULE_5__.Draggable, {\n                                                        draggableId: cellData.gate.id,\n                                                        index: 0,\n                                                        children: (provided)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                ref: provided.innerRef,\n                                                                ...provided.draggableProps,\n                                                                ...provided.dragHandleProps,\n                                                                style: {\n                                                                    ...provided.draggableProps.style,\n                                                                    cursor: \"pointer\",\n                                                                    position: \"absolute\",\n                                                                    top: 0,\n                                                                    left: 0,\n                                                                    width: \"60px\",\n                                                                    height: \"120px\",\n                                                                    gridRow: \"span 2\",\n                                                                    zIndex: 1\n                                                                },\n                                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                                                    src: cellData.gate.content,\n                                                                    layout: \"fixed\",\n                                                                    width: 60,\n                                                                    height: 120,\n                                                                    alt: cellData.gate.type\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                                                                    lineNumber: 359,\n                                                                    columnNumber: 35\n                                                                }, this)\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                                                                lineNumber: 343,\n                                                                columnNumber: 33\n                                                            }, this)\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                                                        lineNumber: 338,\n                                                        columnNumber: 29\n                                                    }, this) : cellData.gate.type !== \"CNOT\" ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_hello_pangea_dnd__WEBPACK_IMPORTED_MODULE_5__.Draggable, {\n                                                        draggableId: cellData.gate.id,\n                                                        index: 0,\n                                                        children: (provided)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                                ref: provided.innerRef,\n                                                                ...provided.draggableProps,\n                                                                ...provided.dragHandleProps,\n                                                                style: {\n                                                                    ...provided.draggableProps.style,\n                                                                    cursor: \"pointer\"\n                                                                },\n                                                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(next_image__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                                                                    src: cellData.gate.content,\n                                                                    width: 50,\n                                                                    height: 50,\n                                                                    alt: cellData.gate.type\n                                                                }, void 0, false, {\n                                                                    fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                                                                    lineNumber: 384,\n                                                                    columnNumber: 35\n                                                                }, this)\n                                                            }, void 0, false, {\n                                                                fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                                                                lineNumber: 375,\n                                                                columnNumber: 33\n                                                            }, this)\n                                                    }, void 0, false, {\n                                                        fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                                                        lineNumber: 370,\n                                                        columnNumber: 29\n                                                    }, this) : null : null,\n                                                    provided.placeholder\n                                                ]\n                                            }, void 0, true, {\n                                                fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                                                lineNumber: 316,\n                                                columnNumber: 23\n                                            }, this)\n                                    }, cellId, false, {\n                                        fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                                        lineNumber: 314,\n                                        columnNumber: 19\n                                    }, this);\n                                }))\n                        }, void 0, false, {\n                            fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                            lineNumber: 297,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                    lineNumber: 295,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    style: {\n                        padding: \"20px\",\n                        color: \"black\"\n                    },\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                            style: {\n                                color: \"black\"\n                            },\n                            children: \"Row Outputs\"\n                        }, void 0, false, {\n                            fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                            lineNumber: 407,\n                            columnNumber: 11\n                        }, this),\n                        grid.map((_, rowIndex)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                children: [\n                                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"strong\", {\n                                        children: [\n                                            \"Row \",\n                                            rowIndex + 1,\n                                            \" Output:\"\n                                        ]\n                                    }, void 0, true, {\n                                        fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                                        lineNumber: 410,\n                                        columnNumber: 15\n                                    }, this),\n                                    \" [\",\n                                    getRowValues(rowIndex).join(\", \"),\n                                    \"]\"\n                                ]\n                            }, rowIndex, true, {\n                                fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                                lineNumber: 409,\n                                columnNumber: 13\n                            }, this))\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n                    lineNumber: 406,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n            lineNumber: 251,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/ryan/Documents/GitHub/f24-nisq-quantum-simulator/frontend-interface/components/DragAndDropGrid.js\",\n        lineNumber: 250,\n        columnNumber: 5\n    }, this);\n}\n_s(DragAndDropGrid, \"zrWGkZT+MqRfHi/wwA90/+KJoYA=\");\n_c = DragAndDropGrid;\nvar _c;\n$RefreshReg$(_c, \"DragAndDropGrid\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./components/DragAndDropGrid.js\n"));

/***/ })

});